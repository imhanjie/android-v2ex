apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.imhanjie.v2ex"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }

}

/**
 * 将 git commit 数量作为 version code
 */
def getGitCommitCount() {
    try {
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', '--first-parent', '--count', 'HEAD'
            standardOutput = stdout
        }
        return Integer.parseInt(stdout.toString().trim())
    }
    catch (ignored) {
        return -1
    }
}

/**
 * 获取构建日期
 */
static def getBuildDate() {
    return new Date().format('yyMMddHHmmss')
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation "junit:junit:${rootProject.ext.junit}"

    implementation project(':widget')
    implementation "com.imhanjie.library:android-utils:${rootProject.ext.android_utils}"
    implementation "com.imhanjie.library:v2ex-api:${rootProject.ext.v2ex_api}"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.ext.kotlin}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${rootProject.ext.kotlin_coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${rootProject.ext.kotlin_coroutines}"

    // Arch Component
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${rootProject.ext.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${rootProject.ext.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${rootProject.ext.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:${rootProject.ext.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${rootProject.ext.lifecycle}"

    // androidx 其他组件
    implementation "androidx.appcompat:appcompat:${rootProject.ext.appcompat}"
    implementation "androidx.core:core-ktx:${rootProject.ext.core_ktx}"
    implementation "androidx.activity:activity-ktx:${rootProject.ext.activity}"
    implementation "androidx.fragment:fragment-ktx:${rootProject.ext.fragment}"
    implementation "androidx.multidex:multidex:${rootProject.ext.multidex}"

    // androidx widget
    implementation "com.google.android.material:material:${rootProject.ext.material}"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:${rootProject.ext.swiperefreshlayout}"

    // Room
    implementation "androidx.room:room-runtime:${rootProject.ext.room}"
    kapt "androidx.room:room-compiler:${rootProject.ext.room}"
    implementation "androidx.room:room-ktx:${rootProject.ext.room}"

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:${rootProject.ext.work_manager}"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:${rootProject.ext.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${rootProject.ext.retrofit}"
    implementation "com.squareup.retrofit2:converter-scalars:${rootProject.ext.retrofit}"
    implementation "com.squareup.okhttp3:logging-interceptor:${rootProject.ext.okhttp}"

    // Glide
    implementation "com.github.bumptech.glide:glide:${rootProject.ext.glide}"
    kapt "com.github.bumptech.glide:compiler:${rootProject.ext.glide}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${rootProject.ext.glide}"

    // 调试工具
    implementation "com.facebook.stetho:stetho:${rootProject.ext.stetho}"

    // 大图预览
    implementation "com.github.SherlockGougou:BigImageViewPager:${rootProject.ext.big_image_view_pager}"
}
